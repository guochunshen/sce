// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// comdistntInner
NumericMatrix comdistntInner(const int N, NumericMatrix dis, NumericMatrix x, bool exclude_conspecifics, LogicalMatrix cal_pairs);
RcppExport SEXP sce_comdistntInner(SEXP NSEXP, SEXP disSEXP, SEXP xSEXP, SEXP exclude_conspecificsSEXP, SEXP cal_pairsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    int N = Rcpp::as<int >(NSEXP);
    NumericMatrix dis = Rcpp::as<NumericMatrix >(disSEXP);
    NumericMatrix x = Rcpp::as<NumericMatrix >(xSEXP);
    bool exclude_conspecifics = Rcpp::as<bool >(exclude_conspecificsSEXP);
    LogicalMatrix cal_pairs = Rcpp::as<LogicalMatrix >(cal_pairsSEXP);
    NumericMatrix __result = comdistntInner(N, dis, x, exclude_conspecifics, cal_pairs);
    return Rcpp::wrap(__result);
END_RCPP
}
// commdistInner
NumericMatrix commdistInner(const int N, NumericMatrix dis, NumericMatrix x, LogicalMatrix cal_pairs);
RcppExport SEXP sce_commdistInner(SEXP NSEXP, SEXP disSEXP, SEXP xSEXP, SEXP cal_pairsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    int N = Rcpp::as<int >(NSEXP);
    NumericMatrix dis = Rcpp::as<NumericMatrix >(disSEXP);
    NumericMatrix x = Rcpp::as<NumericMatrix >(xSEXP);
    LogicalMatrix cal_pairs = Rcpp::as<LogicalMatrix >(cal_pairsSEXP);
    NumericMatrix __result = commdistInner(N, dis, x, cal_pairs);
    return Rcpp::wrap(__result);
END_RCPP
}
// phyloBeta_C
List phyloBeta_C(const int N, NumericMatrix dis, NumericMatrix x, NumericMatrix qxy, double rmax, bool exclude_conspecifics = true, int indextype = 0);
RcppExport SEXP sce_phyloBeta_C(SEXP NSEXP, SEXP disSEXP, SEXP xSEXP, SEXP qxySEXP, SEXP rmaxSEXP, SEXP exclude_conspecificsSEXP, SEXP indextypeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    int N = Rcpp::as<int >(NSEXP);
    NumericMatrix dis = Rcpp::as<NumericMatrix >(disSEXP);
    NumericMatrix x = Rcpp::as<NumericMatrix >(xSEXP);
    NumericMatrix qxy = Rcpp::as<NumericMatrix >(qxySEXP);
    double rmax = Rcpp::as<double >(rmaxSEXP);
    bool exclude_conspecifics = Rcpp::as<bool >(exclude_conspecificsSEXP);
    int indextype = Rcpp::as<int >(indextypeSEXP);
    List __result = phyloBeta_C(N, dis, x, qxy, rmax, exclude_conspecifics, indextype);
    return Rcpp::wrap(__result);
END_RCPP
}

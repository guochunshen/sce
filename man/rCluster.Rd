\name{rCluster}
\alias{rCluster}
\title{simulate a cluster population distribution from the fittedmodel or given parameters}
\usage{
  rCluster(params,N_expect,covrs)
    rMatern(sigma2,alpha,en.filter,plotdim,N,nu=0.5,xcell=1,ycell=1)
}
\arguments{
  \item{params}{a vector contains parameters of a cluster
  population model. it is commonly a fm object retruned by
  the \code{\link{fitCluster}} function.}

  \item{covrs}{a list of im objects which represent the
  observed environmental variables.}

  \item{sigma2}{a paramter in the Matern covariance
  function that controls the flat of the covariance.  the
  larger the sigma2 is, the longer tail the covariance is.}

  \item{alpha}{a parameter in the Matern covariance
  function}

  \item{en.filter}{a im object that is a linear conbination
  of covariables.}

  \item{plotdim}{the maximun value of x and y values of
  individual location.}

  \item{nu}{a parameter controls the sharp of the Matern
  covariance function.  if it equals to Inf, the Matern
  covariance function is corresponding to the log-Gauss
  function.}

  \item{xcell,ycell}{the size of grid used in generate
  random points.}

  \item{ntry}{number of times try to regenerate point
  pattern if error occured (common error is too much
  points)}
}
\value{
  a ppp object
}
\description{
  simulate a cluster population distribution from the
  fittedmodel or given parameters
}
\details{
  A simulated point pattern was generated by the two step
  approach: first generate a point density map accroding to
  the internal cluster process, then a thinning process was
  carried out accroding to the linear correlation function
  between point intensity map and habitat variables. Note
  that this function only generate a point pattern.
  attributes/traits (except species name) of individuals
  can't be generated for new indviduals without any extra
  assumption.
}
\examples{
#load data and get one species
data(testData)
sp1=subset(testData,testData$traits$species=="HYBAPR")

#fit a cluster model
fittedmodel=fitCluster(sp1,~elev+grad)

#generate new simulated population data
rCluster(fittedmodel,sp1$N,sp1$habitat)
}

